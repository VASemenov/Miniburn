#!/usr/bin/env python
"""
Miniburn
Deployment manager

Author: Vladimir Semenov
"""

import os
import sys
import subprocess


app_options = ['api', 'front']
env_options = ['prod', 'dev', 'test']

SYNTAX_ERR_MSG = """
Usage: ./deploy.py [environment]

Environment options:
  -\t""" + "\n  -\t".join(env_options) + '\n'


if len(sys.argv) == 3:
    TASK = 'deploy'
    app = sys.argv[1]
    env = sys.argv[2]
elif sys.argv[1] == 'build' and len(sys.argv) == 4:
    TASK = 'build'
    app = sys.argv[2]
    env = sys.argv[3]
else:
    print(SYNTAX_ERR_MSG)
    sys.exit()


if env not in env_options or app not in app_options:
    print(SYNTAX_ERR_MSG)
    sys.exit()


if app == 'front' and TASK == 'deploy':
    subprocess.run('pip install -r server/dependencies/prod.txt', shell=True, check=False)
    if env == 'dev':
        subprocess.run('pip install -r server/dependencies/dev.txt', shell=True, check=False)
        subprocess.run('rm server/config.cfg', shell=True, check=False)
        subprocess.run('cp server/configs/dev.cfg server/', shell=True, check=False)
        subprocess.run('mv server/dev.cfg server/config.cfg', shell=True, check=False)
    if env == 'test':
        subprocess.run('pip install -r server/dependencies/test.txt', shell=True, check=False)
    if env == 'prod':
        subprocess.run('rm server/config.cfg', shell=True, check=False)
        subprocess.run('cp server/configs/prod.cfg server/', shell=True, check=False)
        subprocess.run('mv server/prod.cfg server/config.cfg', shell=True, check=False)

if TASK == 'build':
    os.system("npm run build:ng" + ("-prod" if env == 'prod' else ""))
    if os.path.exists('server/templates'):
        os.system("rm -r server/templates")

    os.chdir("server")
    os.system("mkdir templates")
    os.chdir("..")
    os.system("mv server/static/index.html server/templates/index.html")
